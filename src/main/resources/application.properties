spring.application.name=Les-Formulix
## logging.level.org.springframework=error

## Configurer la base de données
#spring.datasource.url = jdbc:mysql://database-1.che884y0q5jz.eu-west-3.rds.amazonaws.com:3306/lesFormulixV1?createDatabaseIfNotExist=true
#spring.datasource.username = mcdoritz
#spring.datasource.password = Corvette$72#19

spring.datasource.url = jdbc:mysql://localhost:3306/lesFormulixV1?createDatabaseIfNotExist=true
spring.datasource.username = root
spring.datasource.password =

# Ajouter le "dialecte" SQL à utiliser, ici MySQL.
# Hibernate se connecte à la base de données et JPA vient PERSISTER sur la bdd pour l'alimenter
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect.storage_engine = innodb

## Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
spring.thymeleaf.mode= HTML

## Configurer spring security login mdp
spring.security.user.name = admin
spring.security.user.password = password

## Configurer le reload du serveur en local
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/

spring.devtools.restart.additional-paths=templates/html

## Charger le fichier SQL pour insérer de la donnée
spring.sql.init.mode=always

spring.jpa.show-sql=true

# retarder l'initialisation de la base de données pour executer le SQL
# après initialition de la bdd par Spring
spring.jpa.defer-datasource-initialization=true